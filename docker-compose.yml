version: "3.8"

services:

    traefik:
        image: traefik:2.4.2
        container_name: traefik
        ports:
            - "80:80"
            - "8080:8080"
        labels:
            - 'traefik.enable=true'
            - 'traefik.http.routers.traefik.entrypoints=web'

            - 'traefik.http.services.traefik.loadbalancer.server.port=8080'
            - 'traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)'
            - "traefik.http.routers.traefik.middlewares=auth"

            # auths
            - 'traefik.http.middlewares.auth.basicauth.users=${BASICAUTHCRED}'
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./traefik.yml:/traefik.yml:ro
        networks:
            - web
        restart: always
        extra_hosts:
            - host.docker.internal:${SERVER_LOCAL_IP}

    portainer:
        image: portainer/portainer-ce
        container_name: portainer
        command: -H unix:///var/run/docker.sock

        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.portainer.entrypoints=web"
            - "traefik.http.services.portainer.loadbalancer.server.port=9000"
            - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ${CONFIG}/portainer_data:/data
        networks:
            - web
        restart: always

    sonarr:
        image: linuxserver/sonarr:preview
        container_name: sonarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=${TZ}
            - UMASK_SET=002
        volumes:
            - ${CONFIG}/sonarr:/config
            - ${DOWNLOAD_FOLDER}:/downloads
            - /media:/media
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.sonarr.entrypoints=web"
            - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
            - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
            - "traefik.http.routers.sonarr.middlewares=auth"
        networks:
            - web
        restart: unless-stopped

    radarr:
        image: linuxserver/radarr:nightly
        container_name: radarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=${TZ}
            - UMASK_SET=002
        volumes:
            - ${CONFIG}/radarr:/config
            - ${DOWNLOAD_FOLDER}:/downloads
            - /media:/media
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.radarr.entrypoints=web"
            - "traefik.http.services.radarr.loadbalancer.server.port=7878"
            - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
            - "traefik.http.routers.radarr.middlewares=auth"
        networks:
            - web
        restart: unless-stopped

    jackett:
        image: linuxserver/jackett
        container_name: jackett
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=${TZ}
            - AUTO_UPDATE=true
        volumes:
            - ${CONFIG}/jackett:/config
            - ${DOWNLOAD_FOLDER}:/downloads
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.jackett.entrypoints=web"
            - "traefik.http.services.jackett.loadbalancer.server.port=9117"
            - "traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)"
            - "traefik.http.routers.jackett.middlewares=auth"
        networks:
            - web
        restart: unless-stopped

    deluge:
        image: linuxserver/deluge
        container_name: deluge
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=${TZ}
            - UMASK_SET=002
            - DELUGE_LOGLEVEL=error
        volumes:
            - ${CONFIG}/deluge:/config
            - ${DOWNLOAD_FOLDER}:/downloads
            - /media:/media
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.deluge.entrypoints=web"
            - "traefik.http.services.deluge.loadbalancer.server.port=8112"
            - "traefik.http.routers.deluge.rule=Host(`deluge.${DOMAIN}`)"
        depends_on:
            - vpn
        network_mode: service:vpn
        restart: unless-stopped

    bazarr:
        image: linuxserver/bazarr
        container_name: bazarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=${TZ}
            - UMASK_SET=002
        volumes:
            - ${CONFIG}/bazarr:/config
            - ${DOWNLOAD_FOLDER}:/DOWNLOADS
            - /media:/media
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.bazarr.entrypoints=web"
            - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
            - "traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAIN}`)"
            - "traefik.http.routers.bazarr.middlewares=auth"
        networks:
            - web
        restart: unless-stopped

    heimdall:
        image: linuxserver/heimdall
        container_name: heimdall
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=${TZ}
        volumes:
            - ${CONFIG}/heimdall:/config
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.heimdall.entrypoints=web"
            - "traefik.http.services.heimdall.loadbalancer.server.port=80"
            - "traefik.http.routers.heimdall.rule=Host(`${DOMAIN}`)"
            - "traefik.http.routers.heimdall.middlewares=auth"
        networks:
            - web
        restart: unless-stopped

    duplicati:
        image: linuxserver/duplicati
        container_name: duplicati
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=${TZ}
        volumes:
            - ${CONFIG}/duplicati:/config
            - ${BACKUPS_FOLDER}/duplicati:/backups
            - /:/source/wholedisk:ro
            - /mnt:/source/mnt
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.duplicati.entrypoints=web"
            - "traefik.http.services.duplicati.loadbalancer.server.port=8200"
            - "traefik.http.routers.duplicati.rule=Host(`duplicati.${DOMAIN}`)"
            - "traefik.http.routers.duplicati.middlewares=auth"
        networks:
            - web
        restart: unless-stopped

    vpn:
        container_name: vpn
        image: dperson/openvpn-client:latest
        cap_add:
            - NET_ADMIN
        environment:
            - TZ=${TZ}
            - VPNPORT=1194
            - VPN_FILES="vpn.conf"
            - DNS=${VPNDNSIP}
            - FIREWALL
        ports:
            - 9091:9091
            - 1194:1194
            - 1194:1194/udp
            - ${VPN_RUTORRENT_PORT}:${VPN_RUTORRENT_PORT}
            - ${VPN_RUTORRENT_PORT}:${VPN_RUTORRENT_PORT}/udp
        networks:
            - web
        tmpfs:
            - /run
            - /tmp
        security_opt:
            - label:disable
        stdin_open: true
        tty: true
        volumes:
            - /dev/net:/dev/net:z
            - ${CONFIG}/vpn:/vpn
        sysctls:
            - net.ipv6.conf.all.disable_ipv6=0
        restart: unless-stopped

    rutorrent-vpn:
        image: linuxserver/rutorrent
        container_name: rutorrent-vpn
        environment:
            - PUID=1000
            - PGID=1000
        volumes:
            - ${CONFIG}/rutorrent-vpn:/config
            - ${DOWNLOAD_FOLDER}:/downloads
            - /mnt:/mnt
            - /media:/media
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.rutorrents.entrypoints=web"
            - "traefik.http.services.rutorrents.loadbalancer.server.port=80"
            - "traefik.http.routers.rutorrents.rule=Host(`rutorrents.${DOMAIN}`)"
            - "traefik.http.routers.rutorrents.middlewares=auth"
        depends_on:
            - vpn
        network_mode: service:vpn
        restart: unless-stopped

    wireguard:
        image: linuxserver/wireguard
        container_name: wireguard
        cap_add:
            - NET_ADMIN
            - SYS_MODULE
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Europe/London
            - SERVERPORT=51820
            - PEERS=2
            - PEERDNS=auto
        volumes:
            - ${CONFIG}/wireguard:/config
            - /lib/modules:/lib/modules
        ports:
            - 51820:51820/udp
        sysctls:
            - net.ipv4.conf.all.src_valid_mark=1
        networks:
            - web
        restart: unless-stopped
        dns:
            - 192.168.31.12

    netdata:
        image: netdata/netdata
        container_name: netdata
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.netdata.entrypoints=web"
            - "traefik.http.services.netdata.loadbalancer.server.port=19999"
            - "traefik.http.routers.netdata.rule=Host(`netdata.${DOMAIN}`)"
            - "traefik.http.routers.netdata.middlewares=auth"
        cap_add:
            - SYS_PTRACE
        security_opt:
            - apparmor:unconfined
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
        networks:
            - web
        restart: unless-stopped

    scrutiny:
        image: linuxserver/scrutiny
        container_name: scrutiny
        cap_add:
            - SYS_RAWIO
            - SYS_ADMIN #optional for NVME
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=${TZ}
            - SCRUTINY_API_ENDPOINT=http://localhost:8080
            - SCRUTINY_WEB=true
            - SCRUTINY_COLLECTOR=true
        volumes:
            - ${CONFIG}/scrutiny:/config
            - /run/udev:/run/udev:ro
            - /dev:/dev
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.scrutiny.entrypoints=web"
            - "traefik.http.services.scrutiny.loadbalancer.server.port=8080"
            - "traefik.http.routers.scrutiny.rule=Host(`scrutiny.${DOMAIN}`)"
            - "traefik.http.routers.scrutiny.middlewares=auth"
        devices:
            - /dev/sda:/dev/sda
            - /dev/sdc:/dev/sdc
            - /dev/sdd:/dev/sdd
        networks:
            - web
        restart: unless-stopped

    samba:
        container_name: samba
        image: joebiellik/samba-server
        ports:
            - "137:137/udp"
            - "138:138/udp"
            - "139:139/tcp"
            - "445:445/tcp"
        volumes:
            - ${CONFIG}/samba:/etc/samba
            - /mnt:/mnt
            - /media:/media
        environment:
        - USERNAME=${BASIC_LOGIN}
        - PASSWORD=${BASIC_PASSWORD}
        network_mode: bridge
        restart: unless-stopped

    filebrowser:
        container_name: filebrowser
        image: filebrowser/filebrowser
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.filebrowser.entrypoints=web"
            - "traefik.http.services.filebrowser.loadbalancer.server.port=80"
            - "traefik.http.routers.filebrowser.rule=Host(`filebrowser.${DOMAIN}`)"
        volumes:
            - ${CONFIG}/filebrowser/filebrowser.db:/filebrowser.db
            - ${CONFIG}/filebrowser/.filebrowser.json:/.filebrowser.json
            - /mnt:/srv/mnt
            - /media:/srv/media
            - ${DOWNLOAD_FOLDER}:/srv/downloads
        networks:
            - web
        restart: unless-stopped

    homeassistant:
        image: homeassistant/home-assistant:stable
        container_name: homeassistant
        network_mode: host
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.homeassistant.entrypoints=web"
            - "traefik.http.routers.homeassistant.rule=Host(`ha.${DOMAIN}`)"
            - "traefik.http.routers.homeassistant.service=homeassistant"
            - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"
        volumes:
            - ${CONFIG}/homeassistant:/config
            - /etc/localtime:/etc/localtime:ro
        restart: always

    motioneye:
        image: ccrisan/motioneye:master-amd64
        container_name: motioneye
        networks:
            - web
        security_opt:
            - no-new-privileges:true
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ${CONFIG}/motioneye/etc:/etc/motioneye
            - /tmp/motioneye/var:/var/lib/motioneye
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.motioneye.entrypoints=web"
            - "traefik.http.routers.motioneye.rule=Host(`motioneye.${DOMAIN}`)"
            - "traefik.http.services.motioneye.loadbalancer.server.port=8765"
        restart: unless-stopped

    esphome:
        container_name: esphome
        image: esphome/esphome
        network_mode: host
        volumes:
            - ${CONFIG}/esphome:/config
            - /etc/localtime:/etc/localtime:ro
            - ${CONFIG}/esphome/font:/config/font
        restart: unless-stopped

    adguard:
        container_name: adguard
        volumes:
            - ${CONFIG}/adguard/work:/opt/adguardhome/work
            - ${CONFIG}/adguard/conf:/opt/adguardhome/conf
        ports:
            - "3000:3000/tcp"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.adguard.entrypoints=web"
            - "traefik.http.routers.adguard.rule=Host(`adguard.${DOMAIN}`)"
            - "traefik.http.routers.adguard.service=adguard"
            - "traefik.http.services.adguard.loadbalancer.server.port=3000"
        image: adguard/adguardhome

    zigbee2mqtt:
        container_name: zigbee2mqtt
        image: koenkk/zigbee2mqtt
        volumes:
            - /config/zigbee2mqtt/data:/app/data
            - /run/udev:/run/udev:ro
        devices:
            - /dev/ttyUSB0:/dev/ttyACM0
        restart: always
        network_mode: host
        privileged: true
        environment:
            - TZ=Europe/Warsaw

    zigbee2mqttAssistant:
        image: carldebilly/zigbee2mqttassistant
        container_name: zigbee2mqttAssistant
        environment:
            - Z2MA_SETTINGS__MQTTSERVER=192.168.31.12
            - TZ=Europe/Warsaw
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.zigbee.entrypoints=web"
            - "traefik.http.routers.zigbee.rule=Host(`zigbee.${DOMAIN}`)"
            - "traefik.http.services.zigbee.loadbalancer.server.port=80"
        restart: unless-stopped
        networks:
            - web
        
    mosquitto:
        container_name: mosquitto-MQTT
        image: eclipse-mosquitto
        volumes:
            - /config/mosquitto/config:/mosquitto/config
            - /config/mosquitto/data:/mosquitto/data
            - /config/mosquitto/log:/mosquitto/log
        restart: always
        network_mode: host
        environment:
            - TZ=Europe/Warsaw

networks:
    web:
        name: web